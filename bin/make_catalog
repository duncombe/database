#! /bin/bash
# Enters a collection into a database and creates a catalog entry
# 

# export CATALOG=`pwd`/test-catalog1
# export DATABASE=`pwd`/test-database1

# lock the accession number file
# get the last accession number
# increment 
# write the new number to the file
# free the lock

# <<<<<<< HEAD
# AMSACCFILE=${AMSACCFILE:-/DATA/amsaccession}
# if [ ! -e $AMSACCFILE ]; then touch $AMSACCFILE; fi
# 
# if [ ! -e /var/lock/amsaccession.lock ]; then
# 	echo $0: Cannot get lockfile
# 	exit 2
# fi
# 
# export AMSACC=$( TMPFILE=`mktemp`
# 		    ( flock 9
#                       # echo $(($(cat $AMSACCFILE)+1)) > $TMPFILE
#                       cat $AMSACCFILE | awk '{printf "%07d\n",$1+1}' > $TMPFILE
#                       cat $TMPFILE > $AMSACCFILE
#                     ) 9< /var/lock/amsaccession.lock
# 		cat $TMPFILE 
# 		rm -f $TMPFILE
# 		) 
# 
# =======
# >>>>>>> accessionfile
export INGEST_HOME=${INGEST_HOME:-$(pwd)}

# generate a collection UUID and AMS accession
# export COLLECTION=`uuidgen`

read AMSACC COLLECTION <<< $( ${INGEST_HOME}/getacc )
export AMSACC COLLECTION

export SRCDIR="${1:?}"

export CATALOG=${CATALOG:?}
export DATABASE=${DATABASE:?}

# ensure that SRCDIR goes out with a trailing /
SRCDIR="${SRCDIR%/}/"

# generate an accession identifier
# MIMS ACCESSION_DATE here is a date-time string
export ACCESSION_DATE=`date -u +"%Y%m%dT%H%M"`

# if the submission has a PARENT use that identifier
# otherwise the submission is the parent and the identifiers are the same
export PARENT=${PARENT:-$COLLECTION}
# Use a revision number if there is one, otherwise revision is zero.
export REVISION=${REVISION:-0}

# write what we are doing (goes to the logfile)

echo "AMSACC         = ${AMSACC}"
echo "INGEST_HOME    = ${INGEST_HOME}"
echo "SRCDIR         = ${SRCDIR}"
echo "CATALOG        = ${CATALOG}"
echo "DATABASE       = ${DATABASE}"
echo "COLLECTION     = ${COLLECTION}"
echo "ACCESSION_DATE = ${ACCESSION_DATE}"
echo "PARENT         = ${PARENT}"
echo "REVISION       = ${REVISION}"

# echo $SRCDIR
# echo $CATALOG
# echo $DATABASE
# echo $SRCDIR

# echo $ACCESSION_DATE
# echo $AMSACC
# echo $COLLECTION
# echo $PARENT

# descend through SRCDIR and register all files and directories
# find "${SRCDIR}" -type f -exec bash $(pwd)/register.sh \{\} \;
find "${SRCDIR}" -type f -exec bash ${INGEST_HOME}/register.sh \{\} \;


