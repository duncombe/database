#!/bin/bash
#
# Combine two databases. Copy the first into the second. 
# Note this copies the whole of the first database into the second.
# To move individual collections from one database to another, seek another 
# solution.

# echo Usage: $0 <from> <to> 

# either use a database.cfg file to populate the variables, 
# or import them from the calling shell

INGEST_HOME=${INGEST_HOME:-/home/duncombe/WORK/DEA/database/bin}

frombase=${1}
tobase=${2}

if [ -f "$frombase" ]; then
	from=$frombase
elif [ -d "$frombase" ]; then
	from=$frombase/database.cfg 
fi

unset -v CATALOG DATABASE ACCESSION_DIR 
source $from

# ~/WORK/DEA/database/INGEST/tmp1/manifest.txt
export fromCATALOG=${fromCATALOG:-$CATALOG} 
# ~/WORK/DEA/database/INGEST/tmp1/.DATABASE
export fromDATABASE=${fromDATABASE:-$DATABASE}
# ~/WORK/DEA/database/INGEST/tmp1/ACCESSION
export fromACCESSION_DIR=${fromACCESSION_DIR:-$ACCESSION_DIR}

if [ -f "$tobase" ]; then
	to=$tobase
elif [ -d "$tobase" ]; then
	to=$tobase/database.cfg 
fi

unset -v CATALOG DATABASE ACCESSION_DIR 
source $to 

# ~/WORK/DEA/database/INGEST/tmp/manifest.txt
export toCATALOG=${toCATALOG:-$CATALOG}
# ~/WORK/DEA/database/INGEST/tmp/.DATABASE
export toDATABASE=${toDATABASE:-$DATABASE}
# ~/WORK/DEA/database/INGEST/tmp/ACCESSION
export toACCESSION_DIR=${toACCESSION_DIR:-$ACCESSION_DIR}

unset -v CATALOG DATABASE ACCESSION_DIR 

# read from the catalog (manifest.txt file) the accessions that we want to move
# copy the shasum files from the fromDATABASE (.DATABASE) to the toDATABASE
# write the catalog entry to the toCATALOG
head -n20 ${fromCATALOG} | awk -v TO=$toDATABASE -v FROM=$fromDATABASE -v CATALOG=$toCATALOG --source '
	/^#/{next}
	{ dir=substr($1,1,2)
	  file=substr($1,3)
	  todir= TO "/" dir
	  cmd="test -d " todir
	  if(system(cmd)==1){
		cmd2="mkdir " todir
		system(cmd2)
		close(cmd2)
		}
	  close(cmd)
	  cmd="test -e " todir "/" file
	  if(system(cmd)==1){
		cmd2="cp -v " FROM "/" dir "/" file " " todir
		system(cmd2)
		close(cmd2)
		}
	  else {print todir "/" file " already exists"} 
	  }
	{ print >> CATALOG } 
	' 

# use create_linked_data to recreate the accessions in ACCESSION

export CATALOG=$toCATALOG
export DATABASE=$toDATABASE

# we may end up combining large data catalogs. We DO NOT want to be checking 
# existing links for the entire new catalog. Instead grep only for identifiers 
# that are in the incoming catalog. 

# Column 4 are collection UUIDs 
#                                       this delimiter v is a TAB
for COLLECTION in `grep -v "^#" $fromCATALOG  | cut -d\	 -f4 | uniq`; do 
	$INGEST_HOME/create_linked_data ${toACCESSION_DIR} ${COLLECTION}
done

#
# vi: se tw=0 :
# 

