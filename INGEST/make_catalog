#! /bin/bash
# Enters a collection into a database and creates a catalog entry
# 

# export CATALOG=`pwd`/test-catalog1
# export DATABASE=`pwd`/test-database1

# lock the accession number file
# get the last accession number
# increment 
# write the new number to the file
# free the lock


AMSACCFILE=${AMSACCFILE:-/DATA/amsaccession}

if [ ! -e $AMSACCFILE ]; then touch $AMSACCFILE; fi

export AMSACC=$( TMPFILE=`mktemp`
		    ( flock 9
                      echo $(($(cat $AMSACCFILE)+1)) > $TMPFILE
                      cat $TMPFILE > $AMSACCFILE
                    ) 9< /var/lock/amsaccession.lock
		cat $TMPFILE 
		rm -f $TMPFILE
		)

export INGEST_HOME=${INGEST_HOME:-$(pwd)}

export SRCDIR="${1:?}"

export CATALOG=${CATALOG:?}
export DATABASE=${DATABASE:?}

# ensure that SRCDIR goes out with a trailing /
SRCDIR="${SRCDIR%/}/"


# generate a collection UUID and an accession identifier
# export ACCESSION=`date +"%Y%m%d%H%M%S"`
export COLLECTION=`uuidgen`
export ACCESSION=`date -u +"%Y%m%dT%H%M"`

# if the submission has a PARENT use that identifier
# otherwise the submission is the parent and the identifiers are the same
export PARENT=${PARENT:-$COLLECTION}

# echo $SRCDIR
# echo $CATALOG
# echo $DATABASE
# echo $SRCDIR

# echo $ACCESSION
# echo $AMSACC
# echo $COLLECTION
# echo $PARENT

# descend through SRCDIR and register all files and directories
# find "${SRCDIR}" -type f -exec bash $(pwd)/register.sh \{\} \;
find "${SRCDIR}" -type f -exec bash ${INGEST_HOME}/register.sh \{\} \;


